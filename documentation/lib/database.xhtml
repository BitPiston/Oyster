<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<meta http-equiv="content-type" content="application/xhtml+xml; charset=UTF-8"/>
<meta http-equiv="content-style-type" content="text/css"/>
<link rel="stylesheet" type="text/css" media="screen" href="../document.css"/>
<title>Database Functions | Oyster Documentation</title>
<!--[if lt IE 8]>
					<link rel="stylesheet" type="text/css" media="screen" href="./layout/ie.css" />
					<script src="http://ie7-js.googlecode.com/svn/version/2.0(beta3)/IE8.js" type="text/javascript"></script>
				<![endif]-->
</head>
<body class="documentation">
<div id="header">
<div class="wrapper">
<a id="title" href="http://oyster.bitpiston.com/">Oyster</a>
<span id="subtitle">A Perl web application framework.</span>
</div>
</div>
<hr/>
<div id="navigation">
<div class="wrapper">
<ul>
<li>
<a href="http://oyster.bitpiston.com/">Overview</a>
</li>
<li>
<a href="http://oyster.bitpiston.com/download/">Download</a>
</li>
<li class="selected">
<a href="../index.xhtml">Documentation</a>
</li>
<li>
<a href="http://oyster.bitpiston.com/weblog/">Weblog</a>
</li>
<li>
<a href="http://oyster.bitpiston.com/development/">Development</a>
</li>
</ul>
</div>
</div>
<hr/>
<div id="content">
<div class="wrapper">
<div id="content-primary"><h1><span>2.5</span><a href="./">Database Functions</a></h1>
    <p>
        Extensions to DBI functionality (mostly driver neutral access to insert_ids
        and prepared statements)
    </p>
    <div class="function"><h2 id="connect"><span/><a href="connect" rel="bookmark">connect</a></h2><p>
            Establishes a database connection and tells it to use Oyster exceptions.
        </p><h3>Prototype:</h3><pre class="prototype">
            obj = database::connect(, driver =&gt; string driver, host =&gt; string hostname, user =&gt; string username, password =&gt; string password, database =&gt; string database)
        </pre></div>
    <div class="function"><h2 id="compress_metadata"><span/><a href="compress_metadata" rel="bookmark">compress_metadata</a></h2><p>
            
        </p><p class="note">
            
        </p><h3>Prototype:</h3><pre class="prototype">
            
        </pre><h3>Example:</h3><pre class="code">
            
        </pre></div>
    <div class="function"><h2 id="expand_metadata"><span/><a href="expand_metadata" rel="bookmark">expand_metadata</a></h2><p>
            
        </p><p class="note">
            
        </p><h3>Prototype:</h3><pre class="prototype">
            
        </pre><h3>Example:</h3><pre class="code">
            
        </pre></div>
    <h2 id=""><span/><a href="">Extensions to Database Handle</a></h2>
        <div class="function"><h3 id="insert_id"><span/><a href="insert_id" rel="bookmark">insert_id</a></h3><p>
                Returns the unique ID of the last row inserted into the database.
            </p><h4>Prototype:</h4><pre class="prototype">
                int = $DBH-&gt;insert_id(string sequence_name)
            </pre></div>
        <div class="function"><h3 id="server_prepare"><span/><a href="server_prepare" rel="bookmark">server_prepare</a></h3><p>
                Prepares a query and caches it server side.
            </p><p class="note">
                This calls ordinary prepare() on mysql, its DB driver does not allow
                specifying it per-query, only per connection.
            </p><h4>Prototype:</h4><pre class="prototype">
                object statement_handle = $DBH-&gt;server_prepare(string statement)
            </pre></div>
    <div class="function"><h3 id="query"><span/><a href="query" rel="bookmark">query</a></h3><p>
            Prepares and executes a query in one command, returns the query object
        </p><h4>Prototype:</h4><pre class="prototype">
            object statement_handle = $DBH-&gt;query(string statement[, bind variables]);
        </pre></div>
    
    
    <h2 id=""><span/><a href="">Extensions to Statement Handles</a></h2>
    <div class="function"><h3 id="insert_id"><span/><a href="insert_id" rel="bookmark">insert_id</a></h3><p>
            An alias to $DBH-&gt;insert_id()
        </p></div>
    
</div>
<div id="content-secondary">
<form id="search" method="get" action="/search/">
<div>
<input type="text" id="search-input" name="search-input" accesskey="f" value="Search documentation" onfocus="if(this.value=='Search documentation') this.value='';" onblur="if(this.value=='') this.value='Search documentation';" size="25"/>
<input type="image" src="../images/icon.search.png" id="search-submit " alt="Search" title="Search"/>
</div>
</form>
<h2>Lorem Ipsum</h2>
<p>Mauris eleifend adipiscing nisl. Mauris tellus nunc, condimentum vel, sollicitudin sit amet, gravida et, ante.</p>
</div>
</div>
</div>
<hr/>
<div id="footer">
<div class="wrapper">
<p class="copyright">Copyright © 2007–2008 BitPiston, <abbr title="Limited Liability Company">LLC</abbr>. All rights reserved. <br/> Oyster is released under the <a href="./license.xhtml">Artistic License 2</a>, or the <a href="./license.xhtml">GNU General Public License (GPL) 2</a>.</p>
<a id="bitpiston" href="http://www.bitpiston.com/">A BitPiston Product.</a>
</div>
</div>
</body>
</html>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<meta http-equiv="content-type" content="application/xhtml+xml; charset=UTF-8"/>
<meta http-equiv="content-style-type" content="text/css"/>
<link rel="stylesheet" type="text/css" media="screen" href="../document.css"/>
<title>Common Gateway Interface Functions | Oyster Documentation</title>
<!--[if lt IE 8]>
					<link rel="stylesheet" type="text/css" media="screen" href="./layout/ie.css" />
					<script src="http://ie7-js.googlecode.com/svn/version/2.0(beta3)/IE8.js" type="text/javascript"></script>
				<![endif]-->
</head>
<body class="documentation">
<div id="header">
<div class="wrapper">
<a id="title" href="http://oyster.bitpiston.com/">Oyster</a>
<span id="subtitle">A Perl web application framework.</span>
</div>
</div>
<hr/>
<div id="navigation">
<div class="wrapper">
<ul>
<li>
<a href="http://oyster.bitpiston.com/">Overview</a>
</li>
<li>
<a href="http://oyster.bitpiston.com/download/">Download</a>
</li>
<li class="selected">
<a href="../index.xhtml">Documentation</a>
</li>
<li>
<a href="http://oyster.bitpiston.com/weblog/">Weblog</a>
</li>
<li>
<a href="http://oyster.bitpiston.com/development/">Development</a>
</li>
</ul>
</div>
</div>
<hr/>
<div id="content">
<div class="wrapper">
<div id="content-primary"><h1>Common Gateway Interface Functions</h1><div class="todo"><strong>Todo</strong><ul><li>
        clean up multipart parsing, check out cgi::lite to cover weird corner cases
    </li><li>
        clean up this api a bit, some things are needlessly put into functions
    </li><li>
        Private/Public sections documentation
    </li></ul></div>
    <p>
        Functions associated with processing Common Gateway Interface requests
    </p>
    
    
    
    <div class="function"><h2>start</h2><p>
           Begins a CGI request, processes POST, GET, and COOKIES 
        </p><p class="note">
            Modules should never need to call this function directly, it is called automatically each request.
        </p><h3>start</h3><h3>Prototype:</h3><pre class="prototype">
            cgi::start()
        </pre></div>
    <div class="function"><h2>end</h2><p>
            Ends a CGI request, cleans up after cgi::start()
        </p><p class="note">
            Modules should never need to call this function directly, it is called automatically each request.
        </p><h3>end</h3><h3>Prototype:</h3><pre class="prototype">
            cgi::end()
        </pre></div>
    <div class="function"><h2>_process_namespaces</h2><p>
            Processes namespaces from the url
        </p><p class="note">
            This is a private function used internally by the Oyster library. Modules should never need to call this function.
        </p><p class="note">
            Namespaces allow you to emulate the query string using the directory path.
        </p><p class="note">
            Oyster urls should never have : in them unless you mean to use namespaces!
        </p><h3>_process_namespaces</h3><h3>Prototype:</h3><pre class="prototype">
            _process_namespaces()
        </pre></div>
    <div class="function"><h2>_process_form_post</h2><p>
            Processes POST data
        </p><p class="note">
            This is a private function used internally by the Oyster library. Modules should never need to call this function.
        </p><h3>_process_form_post</h3><h3>Prototype:</h3><pre class="prototype">
            _process_form_post()
        </pre></div>
    <div class="function"><h2>_process_form_get</h2><p>
            Processes GET data
        </p><p class="note">
            This is a private function used internally by the Oyster library. Modules should never need to call this function.
        </p><h3>_process_form_get</h3><h3>Prototype:</h3><pre class="prototype">
            _process_form_get()
        </pre></div>
    <div class="function"><h2>_process_cookies</h2><p>
            Processes cookie data
        </p><p class="note">
            This is a private function used internally by the Oyster library. Modules should never need to call this function.
        </p><h3>_process_cookies</h3><h3>Prototype:</h3><pre class="prototype">
            _process_cookies()
        </pre></div>
    <div class="function"><h2>set_cookie</h2><p>
            Sets a cookie
        </p><p class="note">
            If no expiration time is set, the cookie is usually removed when the browser window is closed.
        </p><h3>set_cookie</h3><h3>Prototype:</h3><pre class="prototype">
            cgi::set_cookie(string name, string value[, int expires_minutes][, string path][, string domain])
        </pre><h3>set_cookie</h3><h3>Example:</h3><pre class="code">
            cgi::set_cookie('last_page_view_time', gmtime(), 60);
        </pre></div>
    <div class="function"><h2>_cookie_date</h2><p>
            Returns a date formatted to be used in a cookie expiration date
        </p><p class="note">
            This is a private function used internally by the Oyster library. Modules should never need to call this function.
        </p><h3>_cookie_date</h3><h3>Prototype:</h3><pre class="prototype">
            string date = _cookie_date(int epoch_seconds)
        </pre></div>
</div>
<div id="content-secondary">
<form id="search" method="get" action="/search/">
<div>
<input type="text" id="search-input" name="search-input" accesskey="f" value="Search documentation" onfocus="if(this.value=='Search documentation') this.value='';" onblur="if(this.value=='') this.value='Search documentation';" size="25"/>
<input type="image" src="../images/icon.search.png" id="search-submit " alt="Search" title="Search"/>
</div>
</form>
<h2>Lorem Ipsum</h2>
<p>Mauris eleifend adipiscing nisl. Mauris tellus nunc, condimentum vel, sollicitudin sit amet, gravida et, ante.</p>
</div>
</div>
</div>
<hr/>
<div id="footer">
<div class="wrapper">
<p class="copyright">Copyright © 2007–2008 BitPiston, <abbr title="Limited Liability Company">LLC</abbr>. All rights reserved. <br/> Oyster is released under the <a href="./license.xhtml">Artistic License 2</a>, or the <a href="./license.xhtml">GNU General Public License (GPL) 2</a>.</p>
<a id="bitpiston" href="http://www.bitpiston.com/">A BitPiston Product.</a>
</div>
</div>
</body>
</html>

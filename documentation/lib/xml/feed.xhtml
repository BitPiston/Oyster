<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<meta http-equiv="content-type" content="application/xhtml+xml; charset=UTF-8"/>
<meta http-equiv="content-style-type" content="text/css"/>
<link rel="stylesheet" type="text/css" media="screen" href="../../document.css"/>
<title>XML Feed Functions | Oyster Documentation</title>
<!--[if lt IE 8]>
					<link rel="stylesheet" type="text/css" media="screen" href="./layout/ie.css" />
					<script src="http://ie7-js.googlecode.com/svn/version/2.0(beta3)/IE8.js" type="text/javascript"></script>
				<![endif]-->
</head>
<body class="documentation">
<div id="header">
<div class="wrapper">
<a id="title" href="http://oyster.bitpiston.com/">Oyster</a>
<span id="subtitle">A Perl web application framework.</span>
</div>
</div>
<hr/>
<div id="navigation">
<div class="wrapper">
<ul>
<li>
<a href="http://oyster.bitpiston.com/">Overview</a>
</li>
<li>
<a href="http://oyster.bitpiston.com/download/">Download</a>
</li>
<li class="selected">
<a href="../index.xhtml">Documentation</a>
</li>
<li>
<a href="http://oyster.bitpiston.com/weblog/">Weblog</a>
</li>
<li>
<a href="http://oyster.bitpiston.com/development/">Development</a>
</li>
</ul>
</div>
</div>
<hr/>
<div id="content">
<div class="wrapper">
<div id="content-primary"><h1><span>2.23.1</span><a href="./">XML Feed Functions</a></h1><div class="todo"><strong>Todo</strong><ul><li>
        Documentation
    </li></ul></div>
    <div class="warning"><strong>Warning</strong><p>
        This library is considered pre-alpha.
    </p></div>
    <p>
        Provides an object to parse and read from rss/atom feeds.
    </p>
    <p class="note">
        This is not meant to be a perfect, deep, feed parser.  It is meant to
        quickly scan feeds and retreive basic information from them, not necessarily
        every little detail in the feed's xml.
    </p>
    <p class="note">
        This is implemented as a subclass to xml::parser.  If you are interested
        in learning how to subclass xml::parser to parse specific types of
        documents, check this module's source out.
    </p>
    
    <h2 id=""><span/><a href="">Object Properties</a></h2>
        
            arrayref items
            string feed_type
            string title
        
    

    <div class="function"><h2 id="new"><span/><a href="new" rel="bookmark">new</a></h2><p>
            Creates a new xml::feed object.
        </p><p class="note">
            'until_url_hash' is used by imfeedr.  If anything, imfeedr should
            subclass this instead of having its hacks hard coded in.
        </p><p class="note">
            If 'num_items' is specified, the parser will stop parsing after the
            specified number of items.
        </p><h3>Prototype:</h3><pre class="prototype">
            $feed = xml::feed-&gt;new(['num_items' =&gt; int max_num_of_items][, 'until_url_hash' =&gt; string title_hash])
        </pre></div>
    <div class="function"><h2 id="parse_url"><span/><a href="parse_url" rel="bookmark">parse_url</a></h2><p>
            
        </p><p class="note">
            
        </p><h3>Prototype:</h3><pre class="prototype">
            
        </pre><h3>Example:</h3><pre class="code">
            
        </pre></div>
    <div class="function"><h2 id="_node_start_handler"><span/><a href="_node_start_handler" rel="bookmark">_node_start_handler</a></h2><p>
            Catches root node and analyzes it to detect the feed type and implement
            the proper handlers.
        </p><p class="note">
            
        </p><h3>Prototype:</h3><pre class="prototype">
            
        </pre><h3>Example:</h3><pre class="code">
            
        </pre></div>
    <h2 id=""><span/><a href="">RDF/RSS Handlers</a></h2>
    
        <div class="function"><h3 id="_rss_node_start_handler"><span/><a href="_rss_node_start_handler" rel="bookmark">_rss_node_start_handler</a></h3><p>
                
            </p><p class="note">
                
            </p><h4>Prototype:</h4><pre class="prototype">
                
            </pre><h4>Example:</h4><pre class="code">
                
            </pre></div>
        <div class="function"><h3 id="_rss_node_end_handler"><span/><a href="_rss_node_end_handler" rel="bookmark">_rss_node_end_handler</a></h3><p>
                
            </p><p class="note">
                
            </p><h4>Prototype:</h4><pre class="prototype">
                
            </pre><h4>Example:</h4><pre class="code">
                
            </pre></div>
    
    
    <h2 id=""><span/><a href="">Atom Handlers</a></h2>
    
        <div class="function"><h3 id="_atom_node_start_handler"><span/><a href="_atom_node_start_handler" rel="bookmark">_atom_node_start_handler</a></h3><p>
                
            </p><p class="note">
                
            </p><h4>Prototype:</h4><pre class="prototype">
                
            </pre><h4>Example:</h4><pre class="code">
                
            </pre></div>
        <div class="function"><h3 id="_atom_node_end_handler"><span/><a href="_atom_node_end_handler" rel="bookmark">_atom_node_end_handler</a></h3><p>
                
            </p><p class="note">
                
            </p><h4>Prototype:</h4><pre class="prototype">
                
            </pre><h4>Example:</h4><pre class="code">
                
            </pre></div>
    
</div>
<div id="content-secondary">
<form id="search" method="get" action="/search/">
<div>
<input type="text" id="search-input" name="search-input" accesskey="f" value="Search documentation" onfocus="if(this.value=='Search documentation') this.value='';" onblur="if(this.value=='') this.value='Search documentation';" size="25"/>
<input type="image" src="../images/icon.search.png" id="search-submit " alt="Search" title="Search"/>
</div>
</form>
<h2>Lorem Ipsum</h2>
<p>Mauris eleifend adipiscing nisl. Mauris tellus nunc, condimentum vel, sollicitudin sit amet, gravida et, ante.</p>
</div>
</div>
</div>
<hr/>
<div id="footer">
<div class="wrapper">
<p class="copyright">Copyright © 2007–2008 BitPiston, <abbr title="Limited Liability Company">LLC</abbr>. All rights reserved. <br/> Oyster is released under the <a href="./license.xhtml">Artistic License 2</a>, or the <a href="./license.xhtml">GNU General Public License (GPL) 2</a>.</p>
<a id="bitpiston" href="http://www.bitpiston.com/">A BitPiston Product.</a>
</div>
</div>
</body>
</html>

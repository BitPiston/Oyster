<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <meta http-equiv="content-type" content="application/xhtml+xml; charset=UTF-8"/>
    <meta http-equiv="content-style-type" content="text/css"/>
    <link rel="stylesheet" type="text/css" media="screen" href="../document.css"/>
    <title>User Module | Oyster Documentation</title>
    <!--[if lt IE 8]>
					<link rel="stylesheet" type="text/css" media="screen" href="./layout/ie.css" />
					<script src="http://ie7-js.googlecode.com/svn/version/2.0(beta3)/IE8.js" type="text/javascript"></script>
				<![endif]-->
  </head>
  <body class="documentation">
    <div id="header">
      <div class="wrapper">
        <a id="title" href="http://oyster.bitpiston.com/">Oyster</a>
        <span id="subtitle">A Perl web application framework.</span>
      </div>
    </div>
    <hr/>
    <div id="navigation">
      <div class="wrapper">
        <ul>
          <li>
            <a href="http://oyster.bitpiston.com/">Overview</a>
          </li>
          <li>
            <a href="http://oyster.bitpiston.com/download/">Download</a>
          </li>
          <li class="selected">
            <a href="../index.xhtml">Documentation</a>
          </li>
          <li>
            <a href="http://oyster.bitpiston.com/weblog/">Weblog</a>
          </li>
          <li>
            <a href="http://oyster.bitpiston.com/development/">Development</a>
          </li>
        </ul>
      </div>
    </div>
    <hr/>
    <div id="content">
      <div class="wrapper">
        <div id="content-primary"><h1><span>2.4</span><a href="./">User Module</a></h1>
    <p>
        This module encapsulates the current user's data/permissions and all user-related actions.
    </p>
    <h2 id=""><span/><a href="">Initialization</a></h2>

        <div class="function"><h3 id="hook_load"><span/><a href="hook_load" rel="bookmark">hook_load</a></h3><p>
                Loads user group data and prepares queries to be used later.
            </p><p class="note">
                This uses event::register_hook() to execute at the right times.
            </p></div>
        <div class="function"><h3 id="import"><span/><a href="import" rel="bookmark">import</a></h3><p>
                Called by other modules to export %USER and %PERMISSIONS
            </p></div>
    

    <h2 id=""><span/><a href="">Actions</a></h2>

        <div class="function"><h3 id="recover"><span/><a href="recover" rel="bookmark">recover</a></h3><p>
                Recovers a lost account by sending an email to a user that allows them to reset their password.
            </p><p class="note">
                This is registered to the url 'user/recover'.
            </p></div>
        <div class="function"><h3 id="edit_account"><span/><a href="edit_account" rel="bookmark">edit_account</a></h3><p>
                Edits a user's settings and profile
            </p><p class="note">
                This is registered to the url 'user/account'.
            </p></div>
        <div class="function"><h3 id="confirm_email"><span/><a href="confirm_email" rel="bookmark">confirm_email</a></h3><p>
                Confirms an email address update
            </p><p class="note">
                This is registered to the url 'user/confirm_email'.
            </p></div>
        <div class="function"><h3 id="confirm_account"><span/><a href="confirm_account" rel="bookmark">confirm_account</a></h3><p>
                Confirms a newly registered account
            </p><p class="note">
                This is registered to the url 'user/confirm'.
            </p></div>
        <div class="function"><h3 id="register"><span/><a href="register" rel="bookmark">register</a></h3><p>
                Registers a new account
            </p><p class="note">
                This is registered to the url 'register'.
            </p></div>
        <div class="function"><h3 id="admin"><span/><a href="admin" rel="bookmark">admin</a></h3><p>
                The administration menu
            </p><p class="note">
                This is registered to the url 'admin/user'.
            </p></div>
        <div class="function"><h3 id="admin_config"><span/><a href="admin_config" rel="bookmark">admin_config</a></h3><p>
                Manages the user module's configuration
            </p><p class="note">
                This is registered to the url 'admin/user/config'.
            </p></div>
        <div class="function"><h3 id="admin_delete_group"><span/><a href="admin_delete_group" rel="bookmark">admin_delete_group</a></h3><p>
                Deletes a user group
            </p><p class="note">
                This is registered to the url 'admin/user/groups/delete'.
            </p></div>
        <div class="function"><h3 id="admin_edit_group"><span/><a href="admin_edit_group" rel="bookmark">admin_edit_group</a></h3><p>
                Modifies a user group
            </p><p class="note">
                This is registered to the url 'admin/user/groups/edit'.
            </p></div>
        <div class="function"><h3 id="admin_create_group"><span/><a href="admin_create_group" rel="bookmark">admin_create_group</a></h3><p>
                Creates a user group
            </p><p class="note">
                This is registered to the url 'admin/user/groups/create'.
            </p></div>
        <div class="function"><h3 id="admin_groups"><span/><a href="admin_groups" rel="bookmark">admin_groups</a></h3><p>
                The manage user groups menu
            </p><p class="note">
                This is registered to the url 'admin/user/groups'.
            </p></div>
        <div class="function"><h3 id="admin_manage"><span/><a href="admin_manage" rel="bookmark">admin_manage</a></h3><p>
                Manage individual users
            </p><p class="note">
                This is registered to the url 'admin/user/manage'.
            </p></div>
        <div class="function"><h3 id="login"><span/><a href="login" rel="bookmark">login</a></h3><p>
                Logs a user into the web site
            </p><p class="note">
                This is registered to the url 'login'.
            </p></div>
        <div class="function"><h3 id="logout"><span/><a href="logout" rel="bookmark">logout</a></h3><p>
                Logs a user out of the web site
            </p><p class="note">
                This is registered to the url 'logout'.
            </p></div>
        <div class="function"><h3 id="view_profile"><span/><a href="view_profile" rel="bookmark">view_profile</a></h3><p>
                View a profile
            </p><p class="note">
                This is registered to the url 'user/profile/(\w+)'.
            </p></div>
    

    <h2 id=""><span/><a href="">Event Hooks</a></h2>
    

    <h2 id=""><span/><a href="">Helper Functions</a></h2>
    

    <h2 id=""><span/><a href="">Public API</a></h2>

        <div class="function"><h3 id="require_permission"><span/><a href="require_permission" rel="bookmark">require_permission</a></h3><p>
                Throws a 'permission_error' exception if a user does not meet a certain permission requirement
            </p><p class="note">
                'minimum_level' defaults to 1.
            </p><h4>Prototype:</h4><pre class="prototype">
                user::require_permission(string permission_id[, int minimum_level])
            </pre></div>
        <div class="function"><h3 id="add_permission"><span/><a href="add_permission" rel="bookmark">add_permission</a></h3><p>
                Adds a permission to the current site's user groups table
            </p><p class="note">
                'default_permission_level' defaults to 0.
            </p><h4>Prototype:</h4><pre class="prototype">
                user::add_permission(string permission_id[, int default_permission_level])
            </pre></div>
        <div class="function"><h3 id="delete_permission"><span/><a href="delete_permission" rel="bookmark">delete_permission</a></h3><p>
                Deletes a permission from the current site's user groups table
            </p><h4>Prototype:</h4><pre class="prototype">
                user::delete_permission(string permission_id)
            </pre></div>
        <div class="function"><h3 id="get_email"><span/><a href="get_email" rel="bookmark">get_email</a></h3><p>
                Retreives a user's email address based on their ID.
            </p><p class="note">
                user_id defaults to the current user ID (if any), and if fetching the current user's email, adds it to the %USER hash.
            </p><h4>Prototype:</h4><pre class="prototype">
                string = user::get_email([int user_id])
            </pre></div>
        <div class="function"><h3 id="get_name"><span/><a href="get_name" rel="bookmark">get_name</a></h3><p>
                Retreives a user's name based on their ID.
            </p><h4>Prototype:</h4><pre class="prototype">
                string = user::get_name(int user_id)
            </pre></div>
        <div class="function"><h3 id="find"><span/><a href="find" rel="bookmark">find</a></h3><p>
                Returns an entry from the user table by id, email, or username
            </p><h4>Prototype:</h4><pre class="prototype">
                hashref = user::find(int user_id or string username or string email)
            </pre></div>
        <div class="function"><h3 id="is_username_taken"><span/><a href="is_username_taken" rel="bookmark">is_username_taken</a></h3><p>
                Checks if a given username is taken
            </p><h4>Prototype:</h4><pre class="prototype">
                bool = user::is_username_taken(string username)
            </pre></div>
        <div class="function"><h3 id="get_module_permissions"><span/><a href="get_module_permissions" rel="bookmark">get_module_permissions</a></h3><p>
                Fetches permissions information about a module
            </p><p class="note">
                Returns undef if no permission information is available
            </p><p class="note">
                throws a 'perl_error' exception if permissions.pl exists but an error occured while reading it
            </p><h4>Prototype:</h4><pre class="prototype">
                hashref = user::get_module_permissions(string module_id)
            </pre></div>
        <div class="function"><h3 id="print_permissions"><span/><a href="print_permissions" rel="bookmark">print_permissions</a></h3><p>
                Prints user permissions exactly matching requested strings as a user child-node
            </p><p class="note">
                Prints all permissions if no string is present
            </p><h4>Prototype:</h4><pre class="prototype">
                user::print_permissions([string permission_name ...])
            </pre><h4>Example:</h4><pre class="code">
                user::print_permissions;
            </pre><pre class="code">
                user::print_permissions('user_admin_config', 'user_admin_groups');
            </pre></div>
        <div class="function"><h3 id="print_permissions_regex"><span/><a href="print_permissions_regex" rel="bookmark">print_permissions_regex</a></h3><p>
                Prints user permissions matching requested strings as a user child-node
            </p><p class="note">
                Matches permissions starting with the provided string(s)
            </p><h4>Prototype:</h4><pre class="prototype">
                user::print_permissions_regex(string permission_partial_name [, string permission_partial_name ...])
            </pre><h4>Example:</h4><pre class="code">
                user::print_permissions_regex('user_admin_');
            </pre></div>
        <div class="function"><h3 id="print_module_permissions"><span/><a href="print_module_permissions" rel="bookmark">print_module_permissions</a></h3><p>
                Prints all user permissions for requested modules as a user child-node
            </p><h4>Prototype:</h4><pre class="prototype">
                user::print_module_permissions(string module_name [, string module_name ...])
            </pre><h4>Example:</h4><pre class="code">
                user::print_module_permissions('user');
            </pre></div>
    
</div>
        <div id="content-secondary">
          <form id="search" method="get" action="/search/">
            <div>
              <input type="text" id="search-input" name="search-input" accesskey="f" value="Search documentation" onfocus="if(this.value=='Search documentation') this.value='';" onblur="if(this.value=='') this.value='Search documentation';" size="25"/>
              <input type="image" src="../images/icon.search.png" id="search-submit " alt="Search" title="Search"/>
            </div>
          </form>
          <h2>Lorem Ipsum</h2>
          <p>Mauris eleifend adipiscing nisl. Mauris tellus nunc, condimentum vel, sollicitudin sit amet, gravida et, ante.</p>
        </div>
      </div>
    </div>
    <hr/>
    <div id="footer">
      <div class="wrapper">
        <p class="copyright">Copyright © 2007–2008 BitPiston, <abbr title="Limited Liability Company">LLC</abbr>. All rights reserved. <br/> Oyster is released under the <a href="./license.xhtml">Artistic License 2</a>, or the <a href="./license.xhtml">GNU General Public License (GPL) 2</a>.</p>
        <a id="bitpiston" href="http://www.bitpiston.com/">A BitPiston Product.</a>
      </div>
    </div>
  </body>
</html>

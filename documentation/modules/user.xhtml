<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<meta http-equiv="content-type" content="application/xhtml+xml; charset=UTF-8"/>
<meta http-equiv="content-style-type" content="text/css"/>
<link rel="stylesheet" type="text/css" media="screen" href="../document.css"/>
<title>User Module | Oyster Documentation</title>
<!--[if lt IE 8]>
					<link rel="stylesheet" type="text/css" media="screen" href="./layout/ie.css" />
					<script src="http://ie7-js.googlecode.com/svn/version/2.0(beta3)/IE8.js" type="text/javascript"></script>
				<![endif]-->
</head>
<body class="documentation">
<div id="header">
<div class="wrapper">
<a id="title" href="http://oyster.bitpiston.com/">Oyster</a>
<span id="subtitle">A Perl web application framework.</span>
</div>
</div>
<hr/>
<div id="navigation">
<div class="wrapper">
<ul>
<li>
<a href="http://oyster.bitpiston.com/">Overview</a>
</li>
<li>
<a href="http://oyster.bitpiston.com/download/">Download</a>
</li>
<li class="selected">
<a href="../index.xhtml">Documentation</a>
</li>
<li>
<a href="http://oyster.bitpiston.com/weblog/">Weblog</a>
</li>
<li>
<a href="http://oyster.bitpiston.com/development/">Development</a>
</li>
</ul>
</div>
</div>
<hr/>
<div id="content">
<div class="wrapper">
<div id="content-primary"><h1>User Module</h1>
    <p>
        This module encapsulates the current user's data/permissions and all user-related actions.
    </p>
    <h2>Initialization</h2><p>

        <div class="function"><h3>hook_load</h3><p>
                Loads user group data and prepares queries to be used later.
            </p><p class="note">
                This uses event::register_hook() to execute at the right times.
            </p></div>
        <div class="function"><h3>import</h3><p>
                Called by other modules to export %USER and %PERMISSIONS
            </p></div>
    </p>

    <h2>Actions</h2><p>

        <div class="function"><h3>recover</h3><p>
                Recovers a lost account by sending an email to a user that allows them to reset their password.
            </p><p class="note">
                This is registered to the url 'user/recover'.
            </p></div>
        <div class="function"><h3>edit_settings</h3><p>
                Edits a user's settings
            </p><p class="note">
                This is registered to the url 'user/settings'.
            </p></div>
        <div class="function"><h3>confirm_email</h3><p>
                Confirms an email address update
            </p><p class="note">
                This is registered to the url 'user/confirm_email'.
            </p></div>
        <div class="function"><h3>confirm_account</h3><p>
                Confirms a newly registered account
            </p><p class="note">
                This is registered to the url 'user/confirm'.
            </p></div>
        <div class="function"><h3>register</h3><p>
                Registers a new account
            </p><p class="note">
                This is registered to the url 'register'.
            </p></div>
        <div class="function"><h3>admin</h3><p>
                The administration menu
            </p><p class="note">
                This is registered to the url 'admin/user'.
            </p></div>
        <div class="function"><h3>admin_config</h3><p>
                Manages the user module's configuration
            </p><p class="note">
                This is registered to the url 'admin/user/config'.
            </p></div>
        <div class="function"><h3>admin_delete_group</h3><p>
                Deletes a user group
            </p><p class="note">
                This is registered to the url 'admin/user/groups/delete'.
            </p></div>
        <div class="function"><h3>admin_edit_group</h3><p>
                Modifies a user group
            </p><p class="note">
                This is registered to the url 'admin/user/groups/edit'.
            </p></div>
        <div class="function"><h3>admin_create_group</h3><p>
                Creates a user group
            </p><p class="note">
                This is registered to the url 'admin/user/groups/create'.
            </p></div>
        <div class="function"><h3>admin_groups</h3><p>
                The manage user groups menu
            </p><p class="note">
                This is registered to the url 'admin/user/groups'.
            </p></div>
        <div class="function"><h3>admin_manage</h3><p>
                Manage individual users
            </p><p class="note">
                This is registered to the url 'admin/user/manage'.
            </p></div>
        <div class="function"><h3>login</h3><p>
                Logs a user into the web site
            </p><p class="note">
                This is registered to the url 'login'.
            </p></div>
        <div class="function"><h3>logout</h3><p>
                Logs a user out of the web site
            </p><p class="note">
                This is registered to the url 'logout'.
            </p></div>
    </p>

    <h2>Event Hooks</h2><p>
    </p>

    <h2>Helper Functions</h2><p>
    </p>

    <h2>Public API</h2><p>

        <div class="function"><h3>require_permission</h3><p>
                Throws a 'permission_error' exception if a user does not meet a certain permission requirement
            </p><p class="note">
                'minimum_level' defaults to 1.
            </p><h4>Prototype:</h4><pre class="prototype">
                user::require_permission(string permission_id[, int minimum_level])
            </pre></div>
        <div class="function"><h3>add_permission</h3><p>
                Adds a permission to the current site's user groups table
            </p><p class="note">
                'default_permission_level' defaults to 0.
            </p><h4>Prototype:</h4><pre class="prototype">
                user::add_permission(string permission_id[, int default_permission_level])
            </pre></div>
        <div class="function"><h3>delete_permission</h3><p>
                Deletes a permission from the current site's user groups table
            </p><h4>Prototype:</h4><pre class="prototype">
                user::delete_permission(string permission_id)
            </pre></div>
        <div class="function"><h3>get_email</h3><p>
                Retreives a user's email address based on their ID.
            </p><p class="note">
                user_id defaults to the current user ID (if any), and if fetching the current user's email, adds it to the %USER hash.
            </p><h4>Prototype:</h4><pre class="prototype">
                string = user::get_email([int user_id])
            </pre></div>
        <div class="function"><h3>get_name</h3><p>
                Retreives a user's name based on their ID.
            </p><h4>Prototype:</h4><pre class="prototype">
                string = user::get_name(int user_id)
            </pre></div>
        <div class="function"><h3>find</h3><p>
                Returns an entry from the user table by id, email, or username
            </p><h4>Prototype:</h4><pre class="prototype">
                hashref = user::find(int user_id or string username or string email)
            </pre></div>
        <div class="function"><h3>is_username_taken</h3><p>
                Checks if a given username is taken
            </p><h4>Prototype:</h4><pre class="prototype">
                bool = user::is_username_taken(string username)
            </pre></div>
        <div class="function"><h3>get_module_permissions</h3><p>
                Fetches permissions information about a module
            </p><p class="note">
                Returns undef if no permission information is available
            </p><p class="note">
                throws a 'perl_error' exception if permissions.pl exists but an error occured while reading it
            </p><h4>Prototype:</h4><pre class="prototype">
                hashref = user::get_module_permissions(string module_id)
            </pre></div>
    </p>
</div>
<div id="content-secondary">
<form id="search" method="get" action="/search/">
<div>
<input type="text" id="search-input" name="search-input" accesskey="f" value="Search documentation" onfocus="if(this.value=='Search documentation') this.value='';" onblur="if(this.value=='') this.value='Search documentation';" size="25"/>
<input type="image" src="../images/icon.search.png" id="search-submit " alt="Search" title="Search"/>
</div>
</form>
<h2>Lorem Ipsum</h2>
<p>Mauris eleifend adipiscing nisl. Mauris tellus nunc, condimentum vel, sollicitudin sit amet, gravida et, ante.</p>
</div>
</div>
</div>
<hr/>
<div id="footer">
<div class="wrapper">
<p class="copyright">Copyright © 2007–2008 BitPiston, <abbr title="Limited Liability Company">LLC</abbr>. All rights reserved. <br/> Oyster is released under the <a href="./license.xhtml">Artistic License 2</a>, or the <a href="./license.xhtml">GNU General Public License (GPL) 2</a>.</p>
<a id="bitpiston" href="http://www.bitpiston.com/">A BitPiston Product.</a>
</div>
</div>
</body>
</html>

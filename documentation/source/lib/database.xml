<document title="Database Functions" extract_time="2008-02-28 07:29:58" source="./lib/database.pm" path="lib/" index="2.5" depth="../" file="database">
    <synopsis>
        Extensions to DBI functionality (mostly driver neutral access to insert_ids
        and prepared statements)
    </synopsis>
    <function name="connect">
        <synopsis>
            Establishes a database connection and tells it to use Oyster exceptions.
        </synopsis>
        <prototype>
            obj = database::connect(, driver => string driver, host => string hostname, user => string username, password => string password, database => string database)
        </prototype>
    </function>
    <function name="compress_metadata">
        <synopsis>
            
        </synopsis>
        <note>
            
        </note>
        <prototype>
            
        </prototype>
        <example>
            
        </example>
    </function>
    <function name="expand_metadata">
        <synopsis>
            
        </synopsis>
        <note>
            
        </note>
        <prototype>
            
        </prototype>
        <example>
            
        </example>
        <todo>
            
        </todo>
    </function>
    <section title="Extensions to Database Handle">
        <function name="insert_id">
            <synopsis>
                Returns the unique ID of the last row inserted into the database.
            </synopsis>
            <prototype>
                int = $DBH->insert_id(string sequence_name)
            </prototype>
        </function>
        <function name="server_prepare">
            <synopsis>
                Prepares a query and caches it server side.
            </synopsis>
            <note>
                This calls ordinary prepare() on mysql, its DB driver does not allow
                specifying it per-query, only per connection.
            </note>
            <prototype>
                object statement_handle = $DBH->server_prepare(string statement)
            </prototype>
        </function>
    <function name="query">
        <synopsis>
            Prepares and executes a query in one command, returns the query object
        </synopsis>
        <prototype>
            object statement_handle = $DBH->query(string statement[, bind variables]);
        </prototype>
    </function>
    </section>
    
    <section title="Extensions to Statement Handles">
    <function name="insert_id">
        <synopsis>
            An alias to $DBH->insert_id()
        </synopsis>
    </function>
    </section>
</document>

<document title="Image Functions" extract_time="2008-02-19 08:11:16" source="./lib/image.pm">
    <warning>
        This library is considered pre-alpha.  It needs to be updated to prevent shell injection and to use exceptions.
    </warning>
    <synopsis>
        Inspect and manipulate images using ImageMagick.  This is basically a
        lightweight version of perlmagick that can potentially use other backends.
    </synopsis>
    <todo>
        Allow alternatives to ImageMagick
    </todo>
    <function name="identify">
        <synopsis>
            Inspect an image and return the type, width, and height.
        </synopsis>
        <note>
            Returns a undef if an error occured
        </note>
        <prototype>
            string type, int width, int height = image::identify(string image_filename)
        </prototype>
        <example>
            throw 'validation_error' => "File is not an image!" unless image::identify($INPUT{'some_upload'}->{'tmp_name'})
        </example>
    </function>
    <function name="thumbnail">
        <synopsis>
            Create a thumbnail of an image
        </synopsis>
        <note>
            Returns undef on failure, 1 on success.
        </note>
        <prototype>
            image::thumbnail(string source_filename, string dest_filename, int width[, int height])
        </prototype>
    </function>
    <function name="watermark">
        <synopsis>
            Overlays one image on top of another
        </synopsis>
        <note>
            If no destination filename is provided, the second argument is
            overwritten.
        </note>
        <note>
            The valid alignments are: topleft, topright, center, bottomleft, and
            bottomright.
        </note>
        <note>
            If no alignment is specified, bottomright is selected.
        </note>
        <prototype>
            image::thumbnail(string overlay_image, string background_image[, string alignment][, string destination_filename])
        </prototype>
        <todo>
            Add a proper return value for success/failure
        </todo>
    </function>
</document>
